Лабораторная работа №5. Читатели-Писатели.

Постановка задачи
-----------------

Требуется создать программу, выполняющую следующие действия.
1. Инициализация глобальной переменной, представляющей критические данные.
int Data=0;
2. Создание 5 потоков-писателей и 5 потоков-читателей.
3. Ожидание завершения потоков.

Схема выполнения потока-писателя следующая.
Writer(){
  while( 5 итераций ){
    sleep( rand(от 10 до 20) );
    Вход_в_критическую_секцию
    printf("Writer N %d starts writing. ReadCount=%d, Data=%d\n", номер_писателя, ReadCount, Data);
    sleep(3);
    printf("Writer N %d ends writing. ReadCount=%d, Data=%d\n", номер_писателя, ReadCount, Data);
    Data ++;
    Выход_из_критической_секции
  }
}

Схема работы потока-читателя аналогичная за исключением строки Data ++;
(читатель не изменяет данные).

Дополнительный требования
-------------------------

1. В программе должны использоваться вызовы функций pthread_create(), pthread_join(), sem_init(), sem_post(), sem_wait().
2. Вызовы функций должны сопровождаться проверкой возвращаемых значений.


Дополнения и замечания
----------------------
1. Лабораторная работа размещена по адресу \\S-FILE2\globaltemp\VMWare\OS-Labs\
2. В виртуальной машине вы можете работать под учетной записью root (пароль root)
3. Для редактирования можно использовать встроенный редактор Midnight Commander (вызывается по F4)
4. Для компляции и линковки можно использовать командную строку следующего вида:

   cc  -o  имя_исполняемого_файла  имя_файла_исходного_кода

   например:   cc  -o  myprog  prog.c

5. Для запуска программ следует использовать командную строку следующего вида:

   ./myprog
