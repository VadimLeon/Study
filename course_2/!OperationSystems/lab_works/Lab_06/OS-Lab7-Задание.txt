Лабораторная работа №7. Разделяемая память.

Постановка задачи
-----------------

Требуется создать 2 программы, выполняющие следующие действия.

"Сервер":
1. Создание разделяемой памяти размером 8 Кб.
2. Подключение разделяемой памяти к ВАП процесса (если разделяемая память уже существует - завершиться с ошибкой "Server is already running.").
 - младшие 4 байта разделяемой памяти содержат этап обслуживания текущего запроса ((int*)shm), должно быть инициализировано значением 0
 - следующие 4 байта разделяемой памяти содержат размер полезных данных ((int*)shm+1)
 - остальные 8184 байта - собственно полезные данные (от (char*)(shm+8) до (char*)(shm+8191))
3. Выполнение цикла
3.1. если этап обслуживания текущего запроса равен -1, выполнить следующие действия
3.1.1. отключить разделяемую память от ВАП
3.1.2. удалить разделяемую память
3.1.3. завершить процесс
3.2. если этап обслуживания текущего запроса равен 1, выполнить следующие действия
3.2.1. считать размер полезных данных количеством значений целого типа (4-байтный int), записанных в область полезных данных
3.2.2. отсортировать значения целого типа в области полезных данных по возрастанию
3.2.3. записать в этап обслуживания текущего запроса значение 2
3.3. если этап обслуживания текущего запроса равен 0 - перейти к следующей итерации

"Клиент":
1. Подключение к разделяемой памяти.
2. Подключение разделяемой памяти к ВАП процесса.
3. Формирование случайного числа от 10 до 20 - размера сортируемого набора - и запись его в поле размера полезных данных
4. Формирование соответствующего количества случайных чисел и запись их в область данных
5. Вывод на консоль размера и неотсортированного содержимого полезных данных (набор значений целого типа)
6. Запись 1 в поле этапа обслуживания текущего запроса
7. Выполнение цикла
7.1. если этап обслуживания текущего запроса равен 1 - перейти к следующей итерации
7.2. если этап обслуживания текущего запроса равен 2
7.2.1. вывод на консоль размера и содержимого поля полезных данных
7.2.2. завершение цикла
8. Запись -1 в поле этапа обслуживания текущего запроса
9. Отключение от разделяемой памяти
10. Завершние процесса.

Замечание. Рекомендуется запускать сервер в одной локальной консоли, а клиент - в другой.
Переключение между консолями - Alt+F1, Alt+F2, Alt+F3,..

Дополнительный требования
-------------------------

1. В программе должны использоваться вызовы функций ftok(), shmat(), shmctl(), shmdt(), shmget().
2. Вызовы функций должны сопровождаться проверкой возвращаемых значений.


Дополнения и замечания
----------------------
1. Лабораторная работа размещена по адресу \\S-FILE2\globaltemp\VMWare\OS-Labs\
2. В виртуальной машине вы можете работать под учетной записью root (пароль root)
3. Для редактирования можно использовать встроенный редактор Midnight Commander (вызывается по F4)
4. Для компляции и линковки можно использовать командную строку следующего вида:

   cc  -o  имя_исполняемого_файла  имя_файла_исходного_кода

   например:   cc  -o  myserver  server.c

5. Для проверки наличия разделяемой памяти можно использовать команду ipcs:

   например:   ipcs

6. Для удаление разделяемой памяти можно использовать команду iprm:

   например:   ipcrm --help


7. Для запуска программ следует использовать командную строку следующего вида:

   ./myserver

